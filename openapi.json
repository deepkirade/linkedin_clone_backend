{
  "openapi": "3.0.0",
  "info": {
    "title": "linkedin",
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "http://localhost:8000"
    }
  ],
  "paths": {
    "/": {
      "get": {
        "tags": [
          "default"
        ],
        "summary": "http://localhost:8000",
        "description": "### GET Request to [http://localhost:8000](http://localhost:8000)\n\nThis GET request retrieves the HTML content for the \"Linkedin App\" webpage hosted at [http://localhost:8000](http://localhost:8000). The HTML content includes input fields for entering user ID, receiver ID, and a send button. Additionally, it contains client-side JavaScript code for socket communication, event listeners, and socket event handling.\n\n#### Request Body\n\nThis GET request does not contain a request body.\n\n#### Response Body\n\nThe response returns an HTML document with input fields for user ID and receiver ID, along with a send button. It also includes client-side JavaScript code for socket communication and event handling.",
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    },
    "/api/v1/user/login": {
      "post": {
        "tags": [
          "default"
        ],
        "summary": "http://localhost:8000/api/v1/user/login",
        "description": "### User Login\n\nThis endpoint allows users to log in to the system.\n\n#### Request Body\n\n- Type: JSON\n    \n    - email (string, required): The email of the user.\n        \n    - password (string, required): The password of the user.\n        \n\n#### Response\n\nThe response will be in JSON format with the following schema:\n\n``` json\n{\n  \"type\": \"object\",\n  \"properties\": {\n    \"message\": {\n      \"type\": \"string\"\n    },\n    \"userExist\": {\n      \"type\": \"object\",\n      \"properties\": {\n        \"_id\": {\n          \"type\": \"string\"\n        },\n        \"name\": {\n          \"type\": \"string\"\n        },\n        \"email\": {\n          \"type\": \"string\"\n        },\n        \"profile\": {\n          \"type\": \"string\"\n        },\n        \"password\": {\n          \"type\": \"string\"\n        },\n        \"role\": {\n          \"type\": \"string\"\n        },\n        \"skills\": {\n          \"type\": \"array\",\n          \"items\": {\n            \"type\": \"string\"\n          }\n        },\n        \"status\": {\n          \"type\": \"string\"\n        },\n        \"lastSeen\": {\n          \"type\": \"string\"\n        },\n        \"createdAt\": {\n          \"type\": \"string\"\n        },\n        \"updatedAt\": {\n          \"type\": \"string\"\n        },\n        \"__v\": {\n          \"type\": \"number\"\n        }\n      }\n    },\n    \"success\": {\n      \"type\": \"boolean\"\n    },\n    \"token\": {\n      \"type\": \"string\"\n    }\n  }\n}\n\n ```",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "email": "deepak.com",
                  "password": "1234"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    }
  }
}